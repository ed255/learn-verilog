library(gate) {
  cell(BUF) {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A"; }
  }

  cell(NOT) {
    area: 8;
    pin(A) { direction: input; }
    pin(Y) { direction: output;
              function: "A'"; }
  }

  cell(NAND) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)'"; }
  }

  cell(AND) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*B)"; }
  }

  cell(ANDYN) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A*(B'))"; }
  }

  cell(ANDNY) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "((A')*B)"; }
  }

  cell(OR) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)"; }
  }

  cell(ORYN) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+(B'))"; }
  }

  cell(ORNY) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "((A')+B)"; }
  }

  cell(NOR) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A+B)'"; }
  }

  cell(XOR) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "(A * (B')) + ((A') * B)"; }
  }

  cell(XNOR) {
    area: 10;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output;
             function: "((A * (B')) + ((A') * B))'"; }
  }
